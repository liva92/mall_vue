{"remainingRequest":"C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\67564\\Desktop\\site\\HYMall\\src\\components\\common\\gridView\\GridView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\67564\\Desktop\\site\\HYMall\\src\\components\\common\\gridView\\GridView.vue","mtime":1576306124376},{"path":"C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576308382003},{"path":"C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576308382003},{"path":"C:\\Users\\67564\\Desktop\\site\\HYMall\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"GridView\",\n  props: {\n    cols: {\n      type: Number,\n      default: 2\n    },\n    hMargin: {\n      type: Number,\n      default: 8\n    },\n    vMargin: {\n      type: Number,\n      default: 8\n    },\n    itemSpace: {\n      type: Number,\n      default: 8\n    },\n    lineSpace: {\n      type: Number,\n      default: 8\n    }\n  },\n  mounted: function mounted() {\n    setTimeout(this._autoLayout, 20);\n  },\n  updated: function updated() {\n    this._autoLayout();\n  },\n  methods: {\n    _autoLayout: function _autoLayout() {\n      // 1.获取gridEl和children\n      // 注: 这里为什么不用document.querySelector呢?\n      // 答: 因为如果在项目中, 多处都用到了grid-view, 那么这里就不确定获取的是哪一个了.\n      var gridEl = this.$refs.gridView;\n      var children = gridEl.children; // 2.设置gridEl的内边距\n\n      gridEl.style.padding = \"\".concat(this.vMargin, \"px \").concat(this.hMargin, \"px\"); // 3.计算item的宽度\n\n      var itemWidth = (gridEl.clientWidth - 2 * this.hMargin - (this.cols - 1) * this.itemSpace) / this.cols;\n\n      for (var i = 0; i < children.length; i++) {\n        var item = children[i];\n        item.style.width = itemWidth + 'px';\n\n        if ((i + 1) % this.cols !== 0) {\n          item.style.marginRight = this.itemSpace + 'px';\n        }\n\n        if (i >= this.cols) {\n          item.style.marginTop = this.lineSpace + 'px';\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["GridView.vue"],"names":[],"mappings":";;;;;;;AAOA,eAAA;AACA,QAAA,UADA;AAEA,SAAA;AACA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;AAKA,aAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KALA;AASA,aAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KATA;AAaA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KAbA;AAiBA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAjBA,GAFA;AAwBA,WAAA,mBAAA;AACA,eAAA,KAAA,WAAA,EAAA,EAAA;AACA,GA1BA;AA2BA,WAAA,mBAAA;AACA,SAAA,WAAA;AACA,GA7BA;AA8BA,WAAA;AACA,iBAAA,uBAAA;AACA;AACA;AACA;AACA,UAAA,SAAA,KAAA,KAAA,CAAA,QAAA;AACA,UAAA,WAAA,OAAA,QAAA,CALA,CAOA;;AACA,aAAA,KAAA,CAAA,OAAA,aAAA,KAAA,OAAA,gBAAA,KAAA,OAAA,QARA,CAUA;;AACA,UAAA,YAAA,CAAA,OAAA,WAAA,GAAA,IAAA,KAAA,OAAA,GAAA,CAAA,KAAA,IAAA,GAAA,CAAA,IAAA,KAAA,SAAA,IAAA,KAAA,IAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,SAAA,MAAA,EAAA,GAAA,EAAA;AACA,YAAA,OAAA,SAAA,CAAA,CAAA;AACA,aAAA,KAAA,CAAA,KAAA,GAAA,YAAA,IAAA;;AACA,YAAA,CAAA,IAAA,CAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,WAAA,GAAA,KAAA,SAAA,GAAA,IAAA;AACA;;AACA,YAAA,KAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,CAAA,SAAA,GAAA,KAAA,SAAA,GAAA,IAAA;AACA;AACA;AACA;AAvBA;AA9BA,CAAA","sourcesContent":["<template>\r\n  <div class=\"grid-view\" ref=\"gridView\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tname: \"GridView\",\r\n    props: {\r\n\t\t  cols: {\r\n\t\t    type: Number,\r\n        default: 2\r\n      },\r\n      hMargin: {\r\n\t\t    type: Number,\r\n        default: 8\r\n      },\r\n      vMargin: {\r\n\t\t    type: Number,\r\n        default: 8\r\n      },\r\n      itemSpace: {\r\n\t\t    type: Number,\r\n        default: 8\r\n      },\r\n      lineSpace: {\r\n\t\t    type: Number,\r\n        default: 8\r\n      }\r\n    },\r\n    mounted: function () {\r\n\t\t  setTimeout(this._autoLayout, 20)\r\n    },\r\n    updated: function () {\r\n      this._autoLayout()\r\n    },\r\n    methods: {\r\n\t\t  _autoLayout: function () {\r\n        // 1.获取gridEl和children\r\n        // 注: 这里为什么不用document.querySelector呢?\r\n        // 答: 因为如果在项目中, 多处都用到了grid-view, 那么这里就不确定获取的是哪一个了.\r\n        let gridEl = this.$refs.gridView;\r\n        let children = gridEl.children;\r\n\r\n        // 2.设置gridEl的内边距\r\n        gridEl.style.padding = `${this.vMargin}px ${this.hMargin}px`\r\n\r\n        // 3.计算item的宽度\r\n        let itemWidth = (gridEl.clientWidth - 2 * this.hMargin - (this.cols - 1) * this.itemSpace) / this.cols;\r\n        for (let i = 0; i < children.length; i++) {\r\n          let item = children[i];\r\n          item.style.width = itemWidth + 'px';\r\n          if ((i+1) % this.cols !== 0) {\r\n            item.style.marginRight = this.itemSpace + 'px'\r\n          }\r\n          if (i >= this.cols) {\r\n            item.style.marginTop = this.lineSpace + 'px'\r\n          }\r\n        }\r\n      }\r\n    }\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n  .grid-view {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src\\components\\common\\gridView"}]}